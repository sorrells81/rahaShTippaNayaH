name: Build Hugo site

on:
  push:
    branches: [ master, content ]
  pull_request:
    branches: [ master, content ]
  workflow_dispatch:
    inputs:
      logLevel:
        default: 'warning'

jobs:
  transform:
    runs-on: ubuntu-latest
    steps:
    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x
    - name: Checkout
      id: checkout
      uses: actions/checkout@master
      with:
        submodules: false
        # Setting true above seems to lead to submodule updation problems.
        fetch-depth: 1
    - name: Get changed files
      id: changed-files
      uses: jitterbit/get-changed-files@v1
    - name: Update submodules
      id: update_submods
      if: ${{ steps.changed-files.conclusion == 'skipped' || !contains(steps.changed-files.outputs.all, 'content') }}
      run: |
        set -o xtrace
        echo "=====${{ steps.changed-files.outputs.all}}======"
        echo "=====${{ steps.changed-files.outputs.all}}======"
        git submodule update --init --recursive
        git submodule update --remote --merge --recursive
    - name: Setup Hugo
      id: setup_hugo
      if: steps.update_submods.conclusion == 'success'
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: "0.83.1"
        # extended: true
      # Step 3 - Clean and don't fail
    - name: Clean build directory
      id: clean_build
      if: steps.setup_hugo.conclusion == 'success'
      shell: bash
      env:
        BB_TOKEN: ${{ secrets.BB_TOKEN }}
      run: |
        set -o xtrace
        git clone https://vvasuki:${{BB_TOKEN}}@bitbucket.org/agnirahas/agnirahas.bitbucket.org.git --branch=master build_bitbucket --depth 1
        rm -rf build_bitbucket/*
    - name: Build hugo site pages
      id: hugo_build
      if: steps.clean_build.conclusion == 'success'
      run: |
        hugo
    - name: Deploy
      if: ${{ github.event_name != 'pull_request' && steps.hugo_build.conclusion == 'success'}}
      run: |
        set -o xtrace
        cd build_bitbucket
        git add -A :/
        git commit -m CU
        git push
